{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///workspace/src/redux/slices/textSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface TextState {\n  value: string;\n}\n\nconst initialState: TextState = {\n  value: '',\n};\n\nconst textSlice = createSlice({\n  name: 'text',\n  initialState,\n  reducers: {\n    setText: (state, action: PayloadAction<string>) => {\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { setText } = textSlice.actions;\nexport default textSlice.reducer;\n"],"names":[],"mappings":";;;;AAAA;;AAMA,MAAM,eAA0B;IAC9B,OAAO;AACT;AAEA,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,SAAS,CAAC,OAAO;YACf,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;IACF;AACF;AAEO,MAAM,EAAE,OAAO,EAAE,GAAG,UAAU,OAAO;uCAC7B,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///workspace/src/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport textReducer from './slices/textSlice';\n\nexport const makeStore = () => {\n  return configureStore({\n    reducer: {\n      text: textReducer,\n    },\n  });\n};\n\nexport type AppStore = ReturnType<typeof makeStore>;\nexport type RootState = ReturnType<AppStore['getState']>;\nexport type AppDispatch = AppStore['dispatch'];\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,YAAY;IACvB,OAAO,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;QACpB,SAAS;YACP,MAAM,mIAAA,CAAA,UAAW;QACnB;IACF;AACF","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///workspace/src/redux/provider.tsx"],"sourcesContent":["'use client';\nimport { useRef } from 'react';\nimport { Provider } from 'react-redux';\nimport { makeStore, AppStore } from './store';\n\nexport default function StoreProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const storeRef = useRef<AppStore | null>(null);\n  if (!storeRef.current) {\n    // Create the store instance the first time this renders\n    storeRef.current = makeStore();\n  }\n\n  return <Provider store={storeRef.current}>{children}</Provider>;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKe,SAAS,cAAc,EACpC,QAAQ,EAGT;IACC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAmB;IACzC,IAAI,CAAC,SAAS,OAAO,EAAE;QACrB,wDAAwD;QACxD,SAAS,OAAO,GAAG,CAAA,GAAA,qHAAA,CAAA,YAAS,AAAD;IAC7B;IAEA,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,SAAS,OAAO;kBAAG;;;;;;AAC7C","debugId":null}}]
}